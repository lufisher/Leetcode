Suppose you have a random list of people standing in a queue. Each person is described by a pair of integers (h, k), where h is the height of the person and k is the number of people in front of this person who have a height greater than or equal to h. Write an algorithm to reconstruct the queue.

Note:
The number of people is less than 1,100.


Example

Input:
[[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]

Output:
[[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]

vector<pair<int, int>> reconstructQueue(vector<pair<int, int>>& people) {
    auto comp = [](const pair<int, int>& p1, const pair<int, int>& p2)
                    { return p1.first > p2.first || (p1.first == p2.first && p1.second < p2.second); };
    sort(people.begin(), people.end(), comp);//首先进行排序，按照自己重量和前面超过和等于自己重量的人数来排
    //这里排序不需要自己排，借助一个lambda表达式
    vector<pair<int, int>> res;
    for (auto& p : people) //然后把一个个排好序的重排。这里重排的意思其实就是把后面较小的不断往前面排
        res.insert(res.begin() + p.second, p);
    return res;
}
