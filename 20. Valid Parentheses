Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

The brackets must close in the correct order, "()" and "()[]{}" are all valid but "(]" and "([)]" are not.

//一般这种判断括号的也就只能用栈来做
class Solution {
public:
    bool isValid(string s) {
        stack<char> mystack;
        for(int i=0;i<s.size();++i)
            if(s[i]=='('||s[i]=='{'||s[i]=='[')
                mystack.push(s[i]);
            else if(s[i]==')')
                if(mystack.empty()||mystack.top()!='(')
                    return false;
                else
                    mystack.pop();
            else if(s[i]==']')
                if(mystack.empty()||mystack.top()!='[')
                    return false;
                else
                    mystack.pop();
            else if(s[i]=='}')
                if(mystack.empty()||mystack.top()!='{')
                    return false;
                else
                    mystack.pop();
        if(mystack.empty())
            return true;
        else
            return false;
    }
};
