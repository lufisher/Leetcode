Given a 32-bit signed integer, reverse digits of an integer.

Example 1:

Input: 123
Output:  321

Example 2:

Input: -123
Output: -321

Example 3:

Input: 120
Output: 21

Note:
Assume we are dealing with an environment which could only hold integers within the 32-bit 
signed integer range. For the purpose of this problem, assume that your function returns 0 whe
n the reversed integer overflows. 
//这个题目难点其实不是怎么获得这个数，而是怎么判断是否超过范围
//要判断是否超过int的范围，首先需要用一个long long型来存储结果，其次是需要判断与INT_MIN INT_MAX的大小关系，这个是需要注意的
//另外，对于取余符号%，运算的符号规则和/是一样的，因此就算是负数，每次%10也是负数，这样得到的结果也是负数
class Solution {
public:
    int reverse(int x) {
        long long res = 0;
        while(x) {
            res = res*10 + x%10;
            x /= 10;
        }
        return (res<INT_MIN || res>INT_MAX) ? 0 : res;
    }
};
