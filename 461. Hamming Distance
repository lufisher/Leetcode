The Hamming distance between two integers is the number of positions at which the corresponding bits are different.

Given two integers x and y, calculate the Hamming distance.

Note:
0 ≤ x, y < 231.

Example:

Input: x = 1, y = 4

Output: 2

Explanation:
1   (0 0 0 1)
4   (0 1 0 0)
       ↑   ↑

The above arrows point to positions where the corresponding bits are different.
//方法：这种涉及到位的题目，一般都要用到&(按位与)、|(按位或)、^(按位异或)、~ (按位取反)、<<（左移）、<<（右移）等移位运算符
//这些运算符也要掌握
class Solution {
public:
	int hammingDistance(int x, int y) {
		int z = x^y;
		int result = 0;
		while (z != 0)
			if (z & 1 == 1) {
				result += 1;
				z >>= 1;
			}
			else
				z >>= 1;
		return result;
	}
};
